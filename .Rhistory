## create token
token <- create_token(app_name, consumer_key, consumer_secret)
## print token
token
## save token to home directory
path_to_token <- file.path(path.expand("~"), ".twitter_token.rds")
saveRDS(token, path_to_token)
## create env variable TWITTER_PAT (with path to saved token)
env_var <- paste0("TWITTER_PAT=", path_to_token)
## save as .Renviron file (or append if the file already exists)
cat(env_var, file = file.path(path.expand("~"), ".Renviron"),
fill = TRUE, append = TRUE)
# refresh .Renviron variables
readRenviron("~/.Renviron")
## get status IDs of CmnSenseChris's friend's
following <- get_friends("CmnSenseChris")
following
# get CmnSenseChris' followers
followers <- get_followers("CmnSenseChris")
followers
#clean following
following <- following[2]
rev_following <- lookup_users(c(following$user_id))
variable.names(rev_following)
?post_unfollow_user
tweet <- rev_following %>% select(user_id, created_at,screen_name,text,verified,description)
tweet <- rev_following %>% select(user_id, screen_name, profile_image_url,
created_at,text,verified,description)
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url
tweet = tweet$text,
verified = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url,
tweet = tweet$text,
verified = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
test2 <- anti_join(tweets,followers, by="user_id")
test3 <- subset(test2, verified!="TRUE")
write.csv(test3, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
install.packages("rtweet")
library(rtweet)
library(dplyr)
vignette("auth", package = "rtweet")
## name of twitter app
app_name <- "ctd_twitter_app"
install.packages("rtweet")
## copy and pasted *your* keys
consumer_key <- "YWiTTOOKAVrUnOG1xeQ4F95OC"
consumer_secret <- "q3ns3kJfYROBCjjzHrAwfxbj2DfsV5dZvcXHS8ok54owGUOyzM"
## create token
token <- create_token(app_name, consumer_key, consumer_secret)
library(rtweet)
library(dplyr)
vignette("auth", package = "rtweet")
## name of twitter app
app_name <- "ctd_twitter_app"
## copy and pasted *your* keys
consumer_key <- "YWiTTOOKAVrUnOG1xeQ4F95OC"
consumer_secret <- "q3ns3kJfYROBCjjzHrAwfxbj2DfsV5dZvcXHS8ok54owGUOyzM"
## create token
token <- create_token(app_name, consumer_key, consumer_secret)
## print token
token
## save token to home directory
path_to_token <- file.path(path.expand("~"), ".twitter_token.rds")
saveRDS(token, path_to_token)
## create env variable TWITTER_PAT (with path to saved token)
env_var <- paste0("TWITTER_PAT=", path_to_token)
## save as .Renviron file (or append if the file already exists)
cat(env_var, file = file.path(path.expand("~"), ".Renviron"),
fill = TRUE, append = TRUE)
# refresh .Renviron variables
readRenviron("~/.Renviron")
## get status IDs of CmnSenseChris's friend's
following <- get_friends("CmnSenseChris")
following
# get CmnSenseChris' followers
followers <- get_followers("CmnSenseChris")
#clean following
following <- following[2]
rev_following <- lookup_users(c(following$user_id))
variable.names(rev_following)
?post_unfollow_user
tweet <- rev_following %>% select(user_id, screen_name, profile_image_url,
created_at,text,verified,description)
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url,
tweet = tweet$text,
verified = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
test2 <- anti_join(tweets,followers, by="user_id")
test3 <- subset(test2, verified!="TRUE")
write.csv(test3, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
## get status IDs of CmnSenseChris's friend's
following <- get_friends("CmnSenseChris")
following
# get CmnSenseChris' followers
followers <- get_followers("CmnSenseChris")
followers
#clean following
following <- following[2]
rev_following <- lookup_users(c(following$user_id))
variable.names(rev_following)
tweet <- rev_following %>% select(user_id, screen_name, profile_image_url,
created_at,text,verified,description)
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url,
tweet = tweet$text,
verified = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
verified <- subset(tweets, verified!="TRUE")
write.csv(verified, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
verified <- subset(tweets, verified ="TRUE")
## get status IDs of CmnSenseChris's friend's
following <- get_friends("CmnSenseChris")
#clean following
following <- following[2]
rev_following <- lookup_users(c(following$user_id))
tweet <- rev_following %>% select(user_id, screen_name, profile_image_url,
created_at,text,verified,description)
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url,
tweet = tweet$text,
verified = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
verified <- subset(tweets, verified ="TRUE")
verified <- subset(tweets, verified! ="FALSE")
verified <- subset(tweets, verified$verified="TRUE")
verified <- subset(tweets, verified$verified = "TRUE")
?subset()
tweets <- data.frame(date = as.Date(tweet$created_at),
sn = tweet$screen_name,
PFP = tweet$profile_image_url,
tweet = tweet$text,
bluecheck = tweet$verified,
bio = tweet$description,
user_id = tweet$user_id)
verified = subset(tweets, bluecheck = "TRUE")
verified = subset(tweets, bluecheck! = "TRUE")
verified[verified$bluecheck == 'TRUE',]
bluecheck <- verified[verified$bluecheck == 'TRUE',]
write.csv(bluecheck, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
write.csv(bluecheck, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
write.csv(bluecheck, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
verified = subset(tweets, bluecheck = "TRUE")
bluecheck <- verified[verified$bluecheck == 'TRUE',]
bluecheck <- antijoin(bluecheck,followers,by="user_id")
library(rtweet)
library(dplyr)
bluecheck <- antijoin(bluecheck,followers,by="user_id")
bluecheck <- anti_join(bluecheck,followers,by="user_id")
# get CmnSenseChris' followers
followers <- get_followers("CmnSenseChris")
bluecheck <- anti_join(bluecheck,followers,by="user_id")
write.csv(bluecheck, "C:/Users/cdavi/Google Drive (chrisdavidsonphd@gmail.com)/followers.csv")
post_unfollow_user("bkesling")
post_unfollow_user("bluelivesmtr")
post_unfollow_user("BrianCDickinson")
post_unfollow_user("Cernovich")
post_unfollow_user("charlescwcooke")
post_unfollow_user("CurtMills")
post_unfollow_user("ElliottRHams")
post_unfollow_user("EricGreitens")
post_unfollow_user("ErikHuberman")
post_unfollow_user("evansiegfried")
post_unfollow_user("geekyJustinLee")
post_unfollow_user("gregstier")
post_unfollow_user("HiCommunities")
post_unfollow_user("JaySekulow")
post_unfollow_user("jeffweiner")
post_unfollow_user("Johnfsnyder")
post_unfollow_user("JohnJamesMI")
post_unfollow_user("jordaneasley")
post_unfollow_user("KellyannePolls")
post_unfollow_user("kirstiealley")
post_unfollow_user("LanceTheDriver1")
post_unfollow_user("LaraLeaTrump")
post_unfollow_user("lawcrimenews")
post_unfollow_user("LeahRemini")
post_unfollow_user("LewisHowes")
post_unfollow_user("lukerosiak")
post_unfollow_user("Manny_Alicandro")
post_unfollow_user("MarkDice")
post_unfollow_user("MattWolking")
post_unfollow_user("maximlott")
post_unfollow_user("MorganGriffith")
post_unfollow_user("MrDanielBuck")
post_unfollow_user("MrRobertScott")
post_unfollow_user("netanyahu")
post_unfollow_user("NileGardiner")
post_unfollow_user("oren_cass")
post_unfollow_user("parscale")
post_unfollow_user("peterjhasson")
post_unfollow_user("PeterRex")
post_unfollow_user("philthatremains")
post_unfollow_user("pruett_collin")
post_unfollow_user("pulte")
post_unfollow_user("robbierogers")
post_unfollow_user("robinettemusic")
post_unfollow_user("SamHuntMusic")
post_unfollow_user("seanspicer")
post_unfollow_user("ShaneAParrish")
post_unfollow_user("shwood")
post_unfollow_user("somegoodnews")
post_unfollow_user("TheBrandonMorse")
post_unfollow_user("TheFIREorg")
post_unfollow_user("thefrankmir")
post_unfollow_user("TLCplMax")
post_unfollow_user("Tmgneff")
post_unfollow_user("TomAinsley")
post_unfollow_user("TravisStorkMD")
post_unfollow_user("TrevDon")
post_unfollow_user("TwitchyTeam")
post_unfollow_user("wattsupbrent")
post_unfollow_user("WillCarr")
post_unfollow_user("WillRicci")
install.packages("rtweet")
library(rtweet)
library(dplyr)
vignette("auth", package = "rtweet")
install.packages("rtweet")
## name of twitter app
app_name <- "ctd_twitter_app"
## copy and pasted *your* keys
consumer_key <- "YWiTTOOKAVrUnOG1xeQ4F95OC"
consumer_secret <- "q3ns3kJfYROBCjjzHrAwfxbj2DfsV5dZvcXHS8ok54owGUOyzM"
## create token
token <- create_token(app_name, consumer_key, consumer_secret)
variable.names(rev_following)
## create token
token <- create_token(app_name, consumer_key, consumer_secret)
install.packages("rtweet")
setwd("~/R_Projects")
setwd("~/R_Projects/mock_HSgrads")
setwd("~/R_Projects/mock_HSgrads")
source("~/R_Projects/mock_HSgrads/HS Graduates Dummy Dataset Notebook.Rmd")
source("~/R_Projects/mock_HSgrads/HS Graduates Dummy Dataset Notebook.Rmd")
setwd("~/R_Projects/mock_HSgrads")
git status
library(tidyberse)
library(tidyverse)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
ID <- c("ID","10 Digit Number")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
View(Definitions)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
if(!require(kable)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F)
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(knitr)) install.packages("knitr", repos = "http://cran.us.r-project.org")
if(!require(kable)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "Student-Level Dataset for 25K Graduating High School Seniors") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T, caption = "<b>Student-Level Dataset for 25K Graduating High School Seniors</b>") %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T) %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T) %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
library(tidyverse)
library(tidyverse)
random_id(n=5, bytes=10)
library(openssl)
random_id(n=5, bytes=10)
library(openssl)
library(tidyverse)
library(openssl)
random_id(n=5, bytes=10)
random_id()
random_id()
?random_id()
library(ids)
detach("package:openssl", unload = TRUE)
random_id()
random_id(n=5, bytes=10)
ID <- c(ramdom_id(n=25,000, bytes=10))
ID <- c(random_id(n=25,000, bytes=10))
head(ID)
random_id(n=5, bytes=6)
ID <- c(random_id(n=25,000 , bytes=10))
ID <- c(random_id(n=2.5e+4, bytes=10))
ID <- c(random_id(n=2.5e+4, bytes=8))
head(ID)
ID <- c(random_id(n=2.5e+4)
rm(ID)
rm(ID)
ID <- c(random_id(n=2.5e+4)
ID <- c(random_id(n=2.5e+4))
ID <- c(random_id(n=2.5e+4, bytes=10))
head(ID)
rm(ID)
ID <- c(1:25,000)
ID <- c(1:2.5E4)
ID <- str_pad(ID, 7, pad = "0")
head(ID)
end(ID)
Gender <- sample(c(1:2),2.5e4,replace=TRUE)
Race <- sample(c(1:4), 10, replace=TRUE, prob=c(.7, .134, .15, .2))
Race <- sample(c(1:4), 2.5e4, replace=TRUE, prob=c(.7, .134, .15, .2))
head(Race)
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=(.4948,.5052))
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=(.4948,.5052))
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=(.4948, .5052))
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=(.49, .51))
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.4948, .5052))
Race <- sample(c(1:4), 2.5e4, replace=TRUE, prob=c(.7, .134, .15, .2))
ACT_Score <- sample(c(1:36), replace=TRUE)
ACT_Score <- sample(c(16:36), replace=TRUE)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 5)
ACT_Score <- rnorm(2.5e4, mean=21, sd = 5)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 5)
min(ACT_Score)
max(ACT_Score)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 2)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 3)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 4)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 3.5)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 3.25)
summary(ACT_Score)
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 3)
summary(ACT_Score)
HS_GPA <- rnorm(2.5e4, mean=2.77,sd=1)
summary(HS_GPA)
HS_GPA <- rnorm(2.5e4, mean=2,sd=1)
summary(HS_GPA)
HS_GPA <- rnorm(2.5e4, mean=1,sd=1)
summary(HS_GPA)
HS_GPA <- sample(c(.1:4,2.5e4, replace=TRUE))
head(HS_GPA)
summary(HS_GPA)
max(HS_GPA)
HS_GPA <- sample(c(.1:4),2.5e4, replace=TRUE))
HS_GPA <- sample(c(.1:4),2.5e4, replace=TRUE)
summary(HS_GPA)
HS_GPA <- sample(c(1:4),2.5e4, replace=TRUE)
summary(HS_GPA)
HS_GPA <- sample(c(1.5:4),2.5e4, replace=TRUE)
summary(HS_GPA)
HS_Type <- sample(c(1:3), 2.5e4, replace=TRUE, prob=c(.8,.15,.05))
College_Type <- sample(c(0:3), 2.5e4, replace=TRUE, prob=c(.6,.1,.2,.1))
PostHS_Plan <- sample(c(1:3), 2.5e4, replace=TRUE, prob=c(.65,.2,.1,.05))
College_Type <- sample(c(0:3), 2.5e4, replace=TRUE, prob=c(.1,.55,.05,.3))
PostHS_Plan <- sample(c(1:3), 2.5e4, replace=TRUE, prob=c(.65,.2,.1,.05))
PostHS_Plan <- sample(c(1:4), 2.5e4, replace=TRUE, prob=c(.65,.2,.1,.05))
1stGen <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.28,.72))
FirstGen <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.28,.72))
PellElig <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.4,.6))
PellElig <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.35,.65))
VA_FIPS <- read.csv("")
git status
VA_FIPS <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/VA_FIPS.csv")
County_FIPS <- sample(VA_FIPS, 2.5e4, replace=TRUE)
head(VA_FIPS)
head(County_FIPS)
County_FIPS <- sample(VA_FIPS$County_FIPS, 2.5e4, replace=TRUE)
head(County_FIPS)
VA_FIPS <- str_pad(VA_FIPS$County_FIPS, 3, pad = "0")
County_FIPS <- sample(VA_FIPS$County_FIPS, 2.5e4, replace=TRUE)
County_FIPS <- sample(VA_FIPS$County_FIPS, 2.5e4, replace=TRUE)
VA_FIPS <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/VA_FIPS.csv")
County_FIPS <- sample(VA_FIPS$County_FIPS, 2.5e4, replace=TRUE)
head(County_FIPS)
County_FIPS <- str_pad(County_FIPS, 3, pad = "0")
head(County_FIPS)
HSgrads <- data.frame(ID,Gender,Race,ACT_Score,HS_GPA,County_FIPS,
HS_Type,College_Type,PostHS_Plan,1stGen,PellElig)
HSgrads <- data.frame(ID,Gender,Race,ACT_Score,HS_GPA,County_FIPS,
HS_Type,College_Type,PostHS_Plan,1stGen,PellElig)
HSgrads <- data.frame(ID,
Gender,
Race,
ACT_Score,
HS_GPA,
County_FIPS,
HS_Type,
College_Type,
PostHS_Plan,FirstGen,PellElig)
merge(HSgrads, VA_FIPS, by = County_FIPS)
VA_FIPS < str_pad(County_FIPS, 3, pad = "0")
VA_FIPS < str_pad(VA_FIPS$County_FIPS, 3, pad = "0")
VA_FIPS < VA_FIPS %>% str_pad(County_FIPS, 3, pad = "0")
VA_FIPS < str_pad(VA_FIPS, 3, pad = "0")
VA_FIPS < str_pad(VA_FIPS$County_FIPS, 3, pad = "0")
VA_FIPS < str_pad(VA_FIPS$County_FIPS, 3, pad = "0")
as.character(VA_FIPS$County_FIPS)
VA_FIPS <- str_pad(VA_FIPS$County_FIPS, 3, pad = "0")
VA_FIPS <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/VA_FIPS.csv")
VA_FIPS <- VA_FIPS %>% mutate(County_FIPS = as.character(County_FIPS))
VA_FIPS <- VA_FIPS %>% mutate(County_FIPS = str_pad(
as.character(County_FIPS),3,pad="0"))
merge(HSgrads, VA_FIPS, by = County_FIPS)
HSgrads <- merge(HSgrads, VA_FIPS, by = "County_FIPS")
head(HSgrads)
summary(HSgrads$County_FIPS)
tail(HSgrads$County_FIPS)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(data.table)) install.packages("data.table", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("kable", repos = "http://cran.us.r-project.org")
Definitions <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/Variable_Definitions.csv")
#Create Table with variables and definitions
kable(Definitions, booktabs=T) %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
#Create Dummy Data
ID <- c(1:2.5E4)
ID <- str_pad(ID, 7, pad = "0")
Gender <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.4948, .5052))
Race <- sample(c(1:4), 2.5e4, replace=TRUE, prob=c(.7, .134, .15, .2))
ACT_Score <- rnorm(2.5e4, mean=20.8, sd = 3)
HS_GPA <- sample(c(1.5:4),2.5e4, replace=TRUE)
HS_Type <- sample(c(1:3), 2.5e4, replace=TRUE, prob=c(.8,.15,.05))
College_Type <- sample(c(0:3), 2.5e4, replace=TRUE, prob=c(.1,.55,.05,.3))
PostHS_Plan <- sample(c(1:4), 2.5e4, replace=TRUE, prob=c(.65,.2,.1,.05))
FirstGen <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.28,.72))
PellElig <- sample(c(1:2), 2.5e4, replace=TRUE, prob=c(.35,.65))
VA_FIPS <- read.csv("https://raw.githubusercontent.com/drcdavidson/mock_HSgrads/main/VA_FIPS.csv")
County_FIPS <- sample(VA_FIPS$County_FIPS, 2.5e4, replace=TRUE)
County_FIPS <- str_pad(County_FIPS, 3, pad = "0")
HSgrads <- data.frame(ID,Gender,Race,ACT_Score,HS_GPA,County_FIPS,
HS_Type,College_Type, PostHS_Plan,FirstGen,
PellElig)
VA_FIPS <- VA_FIPS %>% mutate(County_FIPS = str_pad(
as.character(County_FIPS),3,pad="0"))
HSgrads <- merge(HSgrads, VA_FIPS, by = "County_FIPS")
View(HSgrads)
write.csv(HSgrads, "C:/Users/cdavi/OneDrive/Desktop/Documents/R_Projects/mock_HSgrads/HSgrads.csv",row.names = FALSE)
kable(Definitions, booktabs=T) %>%
kable_styling(latex_options = c("striped", "hold_position"), full_width = F) %>%
column_spec(2, width = "30em")
